{"remainingRequest":"D:\\qb-redm\\server-data\\resources\\[qbus]\\[qb]\\qb-clothing\\html\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\qb-redm\\server-data\\resources\\[qbus]\\[qb]\\qb-clothing\\html\\node_modules\\ifdef-loader\\ifdef-loader.js??ref--14-0!D:\\qb-redm\\server-data\\resources\\[qbus]\\[qb]\\qb-clothing\\html\\src\\components\\Skins.vue?vue&type=template&id=69417b96&","dependencies":[{"path":"D:\\qb-redm\\server-data\\resources\\[qbus]\\[qb]\\qb-clothing\\html\\src\\components\\Skins.vue","mtime":1633580471353},{"path":"D:\\qb-redm\\server-data\\resources\\[qbus]\\[qb]\\qb-clothing\\html\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1633890577149},{"path":"D:\\qb-redm\\server-data\\resources\\[qbus]\\[qb]\\qb-clothing\\html\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1633890585777},{"path":"D:\\qb-redm\\server-data\\resources\\[qbus]\\[qb]\\qb-clothing\\html\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1633890577149},{"path":"D:\\qb-redm\\server-data\\resources\\[qbus]\\[qb]\\qb-clothing\\html\\node_modules\\vue-loader\\lib\\index.js","mtime":1633890585777},{"path":"D:\\qb-redm\\server-data\\resources\\[qbus]\\[qb]\\qb-clothing\\html\\node_modules\\ifdef-loader\\ifdef-loader.js","mtime":1633890576661}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}